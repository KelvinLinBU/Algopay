name: Publish to (Test)PyPI

on:
  push:
    branches:
      - main         # Build and publish to TestPyPI on main
    tags:
      - 'v*'         # Build and publish to PyPI on version tags, e.g. v0.1.0
  workflow_dispatch:  # Optional: allow manual runs

# Prevent duplicate publishes for same ref
concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build sdist & wheel
        run: python -m build

      - name: Validate metadata (twine check)
        run: twine check dist/*

      - name: Upload built distributions
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-testpypi:
    # Only on push to main (not tags)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Download built dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*

  publish-pypi:
    # Only on version tags like v0.1.0
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Download built dists
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
